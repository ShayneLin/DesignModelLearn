使用策略模式实现排序策略

Sort接口，是排序策略的抽象类
     +BubbleSort是实现了Sort接口的具体策略类(冒泡排序)
     +SelectionSort是实现了Sort接口的具体策略类(选择排序)
     +InsertSort是实现了Sort接口的具体策略类(插入排序)
     
ArrayHandler是环境类，数组的处理类，它需要依赖一个Sort的引用，通过它实现调用具体的
不同策略，同时为Sort的引用提供一个注入方法。

调用的流程：
	1.创建一个Sort的具体策略
	2.创建ArrayHandler环境类，并把具体策略类的对象注入给环境对象
	3.通过环境类对象调用sort()方法即可实现。

典型的应用：
   Java SE的容器布局管理就是策略模式的应用
	
	
优点：
   1.可以在不修改原有代码的情况下增加策略类或者说是新行为。
   2.使用策略模式可以避免使用多重条件转移语句。
   3.提供了管理相关的算法族的方法，可以定义一个算法或者行为族（即多种行为）
   
缺点：
   1.客户端必须知道所有的策略类，并且自行决定使用那一个策略类。
   2.策略模式将产生很多策略类和对象，可以通过享元模式一定程度减少对象的数量
   
适用的环境：
   1.如果一个系统有许多类，他们之间的区别仅在于它们的行为，那么就可以使用策略模式。
   2.一个系统需要动态的几种算法中选择一种。
   3.如果一个对象有很多行为，如果不用恰当的模式，就只能使用多重的条件选择语句来实现
   此时可以使用策略模式，把这些行为转移到相应的策略类里就可以使用策略模式避免条件语句。
   