使用迭代器模式实现电视机遥控器

模式的分析：
  聚合对象主要拥有两个职责：一是存储内部数据；二是遍历内部数据。但是前者是聚合对象的
  基本功能，而后者是可以分离的，因此，我们将遍历聚合对象中的 行为提取出来，封装到一个
 迭代器中，通过专门的迭代器来遍历聚合对象的内部数据，这就是迭代器模式的本质。

TVIterator接口：是一个迭代器接口（有诸多的迭代使用的方法）
	+实现类有两个，都是内部类。
	一个是SkyworthTelevision类的SkyworthIterator类。
	一个是TCLTelevision类的TCLIterator类。
Television接口：是一个聚合接口（里面的数据是所有的电视频道）
	+实现类有两个，接口有一个方法createIterator是用来为聚合类创建自己的迭代对象的。
	一个是SkyworthTelevision类
	一个是TCLTelevision类
	
实现的调用流程：
   1.创建聚合对象
   2.调用聚合对象的createIterator方法生成Iterator对象
   3.使用生成的迭代对象就可以实现对聚合对象中存储的数据进行遍历以及其他操作。
        由TVIterator的API决定。
   4.结束
   
适用的环境：
 1.访问一个聚合对象而无需暴露它的内部表示。
 2.聚合对象需要多种的遍历方式

优点：
 1.支持以不同的方式遍历一个聚合对象
 2.迭代器简化了聚合类。将聚合类的一部分功能（即数据遍历或者读取）交给了迭代器完成。
 3.新增聚合类和迭代器类都很方便，无需修改源码。
 4.在一个聚合上可以有多个遍历。
 
缺点：
   由于迭代器模式将存储数据和遍历数据的职责分离，增加聚合类对应需要增加迭代器类，一定程度
   上增加了系统的复杂性。  
   
   
   
   
   
   
   
   
   
   
   
   