使用桥接模式模拟毛笔（毛笔有大小，颜色）

桥接模式中的脱耦，就是指在一个软件系统的抽象化和实现化之间使用关联关系而不是继承关系。


Color接口，是实现类的接口，主要负责的是简单的操作（由它来完成其它维度的功能）
    -具体实现类有三个
    +Black类
    +Blue类
    +Red类
Pen抽象类，是抽象类，该抽象类一般负责比Color接口更多的功能。
    -子类有三个
    +BigPen类
    +MiddlePen类
    +Small类
主要关系：Pen抽象类会通过关联关系关联一个Color的对象，也是因此能通过抽象接口Color的具体
实现类而新增维度。

调用的流程：
	1.首先创建Color和Pen的声明，并为之创建对象
	2.将color对象注入到pen中
	3.调用pen的draw()方法即可
	4.结束


适用的环境：
    1.如果一个系统需要构件的抽象化角色和具体角色之间增加更多的灵活性。
    2.一个类存在两个独立变化维度，且两个维度都需要进行扩展。
    3.不希望使用继承和多层继承的地方
	
优点：
    1.分离抽象接口及其实现部分。桥接模式使用对象间的关联关系解耦了抽象和实现之间固有
    的绑定关系，使得抽象和实现可以沿着自己各自维度来变化。
    2.桥接模式类似与多继承方案，但是多继承违背了类的单一职责原则，复用性差，而桥接模式是
    一个较好的解决方法。
    3.提高了系统的可扩充性。
    4.实现细节对客户透明。
缺点：
    1.增加系统理解和设计难度，由于聚合关系建立在抽象层，需要对抽象进行设计和编程，如例子
    中的pen中关联的color在BigPen的具体抽象实现对象中并不知道有color对象，而它在Pen中
    已经关联。
  	2.需要系统正确识别出两个独立变化的维度，使用范围有一定的局限。
  	
 
    