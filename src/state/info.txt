使用状态模式实现论坛用户等级：不同的用户可以有不同的操作，随着用户状态的改变而改变

ForumAccount类是环境类，论坛帐号类
	-通过构造方法会创建一个AbstractState的引用
    -有个downloadFile、writeNote,replyNote方法
    
AbstractState类是抽象状态类（帐号状态类）
	-特别注意：状态类也有持有指向ForumAccount的引用，为了更新状态对象。
    +子类1：PrimaryState具体状态类（新手状态类）
    +子类2：MiddleState具体状态类（高手状态类）
    +子类3：HighState具体状态类（专家状态类）
    
调用的流程：
   1.forumAccount对象调用downloadFile,writeNote,replyNote方法
       在这些方法内会通过持有的AbstractState的对象再调用相应状态的对应方法。
   2. AbstractState的对象调用了其方法，在其方法内需要调用自身的checkState()
       方法来实现对权限的判断和控制，同时进行状态的转变。（checkState方法很重要）  
   3.完成转变也就结束了一个周期。
  
两种状态模式：
1.简单状态模式：每个状态类都封装与状态相关的操作，而无需关心状态的切换
   （很像策略莫斯额。。。。。）
2.可切换状态的状态模式
   在实现可切换状态模式时，在具体状态类内部需要调用环境类Context的setState()方法进行
   状态的切换操作，这就是使得状态类与环境类之间有了相互依赖的关系.因此增加新状态类时,还需要
   修改源码,而简单状态模式就不用.
   
适用的环境：
	1.对象的行为依赖于它的状态（属性）并且可以根据它的状态改变而改变它的相关行为。
	如：银行帐号，具有不同的状态时其行为有所差异。
   
优点：
   1.封装了转换规则，无需使用冗长的条件语句进行判断和转移。
   
缺点：
   2.增加系统类和对象的个数
   3.对于开闭原则支持并不太友好，因为新增状态时，需要对于切换状态的那部分代码需要修改
       例如例子中的checkState方法，增加一个状态就需要该很多地方。