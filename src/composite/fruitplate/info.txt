组合模式用于组合多个对象形成树形结构以表示“整体-部分”的结构层次。



通过组合模式实现水果盘：水果盘中可以有水果和水果盘

MyElement抽象构件类，具有抽象的eat()方法。

Apple、Banana、Pear都是叶子构件类，继承自MyElement所以有eat()方法。

Plate是容器构件类继承自MyElement同样实现了eat()方法。
但是该容器类还有自己的其他的方法，里面维护了一个List<MyElement>的容器。
因此在客户端的Plate对象的声明不能是抽象的构件类。注意！！！！

！！！其他的典型应用：使用组合模式文件的浏览（Folder下有Folder和各种File）

适用的环境：
   1.表示一个对象整体或者部分层次，在具有整体和部分的层次结构中，希望通过一种方式忽略
   整体和部分之间的差异，一致的对待他们。
   2.让客户能够忽略不同对象层次的变化，客户端可以针对抽象构件编程，无需关心层次结构的
   细节。


优点：
   1.可以清楚的定义分层次的对象，表示对象的全部或者部分层次，使得增加新构件也更容易，
   因为它让客户忽略了层次的差异。
   2.客户端调用简单，客户端可以一致的使用组合结构或其中单个对象，不必关心是单个对象还是
   组合结构。
   3.定义了叶子对象和容器对象的类层次结构，不断的递归可以形成复杂的树形结构。
缺点：
   1.使设计变得抽象，对业务规则复杂时，实现组合模式具有很大的挑战。
